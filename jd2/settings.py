# -*- coding=utf-8 -*-
"""
Django settings for jd2 project.

Generated by 'django-myadmin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from logging import CRITICAL
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#hqz5#kd(s(b(zvmtg+v4^%(ncqbqfo-5-3bc9(epb3+9*-2i_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
    'debugtools',
    # 调试模板的工具 django-debugtools:http://django-debug-toolbar.readthedocs.org/en/1.4/
)

MIDDLEWARE_CLASSES = (

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.locale.LocaleMiddleware',  # 改变django默认语言,要放在SessionMiddleware之后
    'app.middleware.CheckSession',  # 用户登录后保存用户名到cookie
)

ROOT_URLCONF = 'jd2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), os.path.join(BASE_DIR, 'app/myadmin/templates')],
        # 模板路径配置在这里
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'jd2.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
CACHES ={
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

# LANGUAGE_CODE = 'en-us'
#
# # TIME_ZONE = 'Asia/Shanghai'
# TIME_ZONE = 'GMT-8'
TIME_ZONE = 'Asia/Shanghai'

LANGUAGE_CODE = 'zh-hans'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'), os.path.join(BASE_DIR, 'app/myadmin/static'))

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#
# HERE=os.path.dirname(os.path.dirname(__file__))
# MEDIA_ROOT=os.path.join( HERE , 'media').replace('\\','/')
# MEDIA_URL = '/media/'
# STATIC_ROOT =os.path.join( HERE , 'static').replace('\\','/')
# STATIC_URL= '/static/'
# ADMIN_MEDIA_ROOT = '/static/admin/'
# STATICFILES_DIRS = (
#        os.path.join(HERE,'app1/static/').replace('\\','/'),
#        os.path.join(HERE,'app2/static/').replace('\\','/')
# )










# 按手册和网上的方法在settings.py中设置“SESSION_COOKIE_AGE” 和 “SESSION_EXPIRE_AT_BROWSER_CLOSE” 均不生效。
# 通过查看django的源代码"middleware.py"才知道这两个参数只有在
# settings.SESSION_SAVE_EVERY_REQUEST 为True时才有效。
# 依此在settings.py中设置这个变量后问题解决。
# 从源代码看SESSION_EXPIRE_AT_BROWSER_CLOSE为True时 SESSION_COOKIE_AGE 不生效。
# 也就是说用户只能二选一，在浏览器关闭时使session失效 或 超时失效。

# request.session.set_expiry(value) 你可以传递四种不同的值给它： 
# * 如果value是个整数，session会在些秒数后失效（适用于整个Django框架，即这个数值时效时整个页面都会session失效）。 
# * 如果value是个datatime或timedelta，session就会在这个时间后失效。 
# * 如果value是0,用户关闭浏览器session就会失效。 
# * 如果value是None,session会依赖全局session失效策略。


# SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_AGE = 60 * 30  # 单位秒 60*30=30分钟。
# SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # ：会话cookie可以在用户浏览器中保持有效期。True：关闭浏览器，则Cookie失效。

